- Chocolatey: package management to install node js and other libraries

	/ choco install OR cinst are the same command

	/ choco intall nodejs-lts
	/ cinst nodejs-lts

- NPM: another package management (native from Node JS) used to install other libraries

	/ node -v # shows the node version
	/ npm -v # shows the npm version
	/ choco -v # shows the chocolatey version

-*-*-*-*

\ Dracula Theme
\ Material Icon Theme
\ Browser Extension: Json Viewer

-*-*-*-*

\ Express: control routes and parameters
	
	/ npm install express

\ React Native: it's like Ajax, but better
\ Expo: includes mobile's native functionalities into the React (Android's and iOS's SDKs). It's a mobile app that you have to install in your phone

\ NPX: it's like npm, but just executes the modules

	/ npx create-react-app frontend


-*-*-*-*-

\ Insomnia: used to do tests in PUT, DELETE and POST HTTP Methods

\ Nodemon: updates the server without having to restart it. You ALWAYS have to install it as a Dev Dependency (-D)

	npm install nodemon -D

	"scripts": {
    	"start": "nodemon index.js"
  	},

  	npm start

\ KnexJS: connect to SQL databases

	npm install knex
	npm install sqlite3
	npx knex init

	// development environment
  	development: {
    	client: 'sqlite3',
    	connection: {
      	filename: './src/database/db.sqlite'
    	},
    	migrations: {
      	directory: './src/database/migrations'
    	},
    	useNullAsDefault: true,
  	},

\ KnexJS Migrations: log/history of all updates in the database schema

	npx knex migrate:make migration_name
	
	npx knex migrate:latest // executes the migrations

	npx knex migrate:rollback // undoes the last migration

	npx knex migrate:status // lists all executed migrations

\ Cors: security package that allows you to inform which websites can access your back-end

	npm install cors

\ React Icons: icons to your application

	npm install react-icons

\ React Router Dom: used to control the Routes in the Front-End

	npm install react-router-dom

\ Axios: Http provider that will create the communication between front and backend

	npm install axios >> frontend and mobile

\ INTL: package to format numbers to currency

	npm install intl > mobile

-*-*-*-*-

\ Git:

	https://github.com/CSFelix/be-the-hero.git

	git config --global user.name 'CSFelix'
	
	git config --global user.email 'csfelix08@gmail.com'

-*-*-*-*-

- (cmd) Expo: simulate application in mobile

	npm install -g expo-cli

	expo init mobile >> blank template

	expo install expo-constants

	expo install expo-mail-composer >> send email

- (cmd) Yarn: generates qr code to test your application in Expo

	npm install --global yarn

	yarn start

- (cmd) React Navigation: manages routes in React Native applications

	npm install @react-navigation/native

	expo install react-native-screens react-native-safe-area-context

	npm install @react-navigation/stack

-*-*-*-*-

	************************
	** React's Components **
	************************

- Component: JavaScript that returns HTML tags. Tip: create a new Component for each part of HTML that you have to use in more than one page (this will make your job easier to do updates and fixes in the code)

- JSX: HTML integrated inside a JavaScript file

- Properties: it's like the attributes in HTML, but they are used when a Component should have a different content for each page it's imported

- States: they're used when you have to update some Component's Contents without having to update the whole page (kinda like Ajax)

- Imutability: all States can't have their values changed directly, which means you have to use a function called SetState to change their values

-*-*-*-*-

	******************
	** React Native **
	******************

- Tags: <View>, <Text>

- Style: StyleSheet

- Display Flex is default!!

- Properties: replace '-' by upper case letters and add quotes for each property value

- Inherit: there is no property inherit in React Native

-*-*-*-*-

	**************************
	** Validation and Tests **
	**************************

- Celebrate: validates datas, integrating the JOI library within express library

	npm intall celebrate

We use Celebrate's validations in routes where we receive datas from the user, like Creates and Updates, and Deletes and Lists in some cases

- Jet: TDD Test!!

	npm install jest -D

	npx jest --init >> 'yes' for scripts >> run in node >> 'no' for coverage report >> 'yes' for mock calls

- Cross-env: applied to use databases for tests

	npm install cross-env

- Super-Test: it's like axios, but for test environment

	npm install supertest -D